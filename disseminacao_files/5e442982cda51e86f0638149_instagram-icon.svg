<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 24.0.3, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Group_77" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 22.25 22.25" style="enable-background:new 0 0 22.25 22.25;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#A2B0BA;}
</style>
<g transform="translate(0, 0)">
	<path class="st0" d="M11.13,2c2.97,0,3.32,0.01,4.5,0.07c1.27,0.06,2.44,0.31,3.35,1.22c0.9,0.9,1.16,2.08,1.22,3.35
		c0.05,1.17,0.07,1.53,0.07,4.5s-0.01,3.32-0.07,4.5c-0.06,1.27-0.31,2.44-1.22,3.35c-0.9,0.9-2.08,1.16-3.35,1.22
		c-1.17,0.05-1.53,0.07-4.5,0.07s-3.32-0.01-4.5-0.07c-1.27-0.06-2.44-0.31-3.35-1.22c-0.9-0.9-1.16-2.08-1.22-3.35
		C2.02,14.45,2,14.1,2,11.13s0.01-3.32,0.07-4.5c0.06-1.27,0.31-2.44,1.22-3.35c0.9-0.9,2.08-1.16,3.35-1.22
		C7.8,2.02,8.16,2,11.13,2 M11.13,0C8.1,0,7.73,0.01,6.54,0.07c-1.81,0.08-3.4,0.53-4.67,1.8c-1.27,1.27-1.72,2.86-1.8,4.67
		C0.01,7.73,0,8.1,0,11.13s0.01,3.4,0.07,4.59c0.08,1.81,0.53,3.4,1.8,4.67c1.27,1.27,2.86,1.72,4.67,1.8
		c1.19,0.05,1.57,0.07,4.59,0.07s3.4-0.01,4.59-0.07c1.81-0.08,3.4-0.53,4.67-1.8c1.27-1.27,1.72-2.86,1.8-4.67
		c0.05-1.19,0.07-1.57,0.07-4.59s-0.01-3.4-0.07-4.59c-0.08-1.81-0.53-3.4-1.8-4.67c-1.27-1.27-2.86-1.72-4.67-1.8
		C14.53,0.01,14.15,0,11.13,0L11.13,0z"/>
	<path class="st0" d="M11.13,5.41c-3.16,0-5.71,2.56-5.71,5.71s2.56,5.71,5.71,5.71s5.71-2.56,5.71-5.71S14.28,5.41,11.13,5.41z
		 M11.13,14.84c-2.05,0-3.71-1.66-3.71-3.71s1.66-3.71,3.71-3.71s3.71,1.66,3.71,3.71S13.17,14.84,11.13,14.84z"/>
	<circle class="st0" cx="17.07" cy="5.19" r="1.34"/>
</g>
<!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script><!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script></svg>
